{# Leaf tenant vlan interfaces #}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is defined %}
{%         for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%             if loop.first %}
## {{ tenant }} ##
{%             endif %}
{%             for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort if svi in leaf.svis %}
{# Detect if a svi_profile exists #}
{# If exists, create a shortpath to access profile data #}
{%                 set per_svi = namespace() %}
{%                 set profile = namespace() %}
{%                 set per_svi.values = tenants[tenant].vrfs[vrf].svis[svi] %}
{%                 if svi_profiles is defined and svi_profiles is not none %}
{%                     if tenants[tenant].vrfs[vrf].svis[svi].profile is defined %}
{%                         if tenants[tenant].vrfs[vrf].svis[svi].profile in svi_profiles %}
{%                             set profile.values = svi_profiles[tenants[tenant].vrfs[vrf].svis[svi].profile] %}
{%                         endif %}
{%                     endif %}
{%                 endif %}
{# Tenant VLAN interfaces #}
  Vlan{{ svi }}:
    tenant: {{ tenant }}
    tags: {{ tenants[tenant].vrfs[vrf].svis[svi].tags }}
    description: {{ per_svi.values.name }}
{%                 if per_svi.values.enabled is defined and per_svi.values.enabled == true or profile.values.enabled is defined and profile.values.enabled == true %}
    shutdown: false
{%                 else %}
    shutdown: true
{%                 endif %}
    vrf: {{ vrf }}
{# IP address configuration #}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].nodes is defined %}
{%                     for node in tenants[tenant].vrfs[vrf].svis[svi].nodes %}
{%                          if node == inventory_hostname %}
{%                              if tenants[tenant].vrfs[vrf].svis[svi].nodes[inventory_hostname].ip_address is defined %}
    ip_address: {{ tenants[tenant].vrfs[vrf].svis[svi].nodes[inventory_hostname].ip_address }}
{%                              endif %}
{%                          endif %}
{%                     endfor %}
{%                 endif %}
{# Virtual Router IP Address #}
{%                 if per_svi.values.ip_virtual_router_address is defined or profile.values.ip_virtual_router_address is defined %}
    ip_virtual_router_address: {{ per_svi.values.ip_virtual_router_address | ipaddr('address') if per_svi.values.ip_virtual_router_address is defined else profile.values.ip_virtual_router_address | ipaddr('address') }}
{%                 endif %}
{# Virtual IP address #}
{%                 if per_svi.values.ip_address_virtual is defined or profile.values.ip_address_virtual is defined %}
    ip_address_virtual: {{ per_svi.values.ip_address_virtual if per_svi.values.ip_address_virtual is defined else profile.values.ip_address_virtual }}
{%                 endif %}
{# Virtual Secondary IP address #}
{%                 if per_svi.values.ip_address_virtual_secondary is defined or profile.values.ip_address_virtual_secondary is defined %}
    ip_address_virtual_secondary: {{ per_svi.values.ip_address_virtual_secondary if per_svi.values.ip_address_virtual_secondary is defined else profile.values.ip_address_virtual_secondary }}
{%                 endif %}
{# MTU definition #}
{%                 if per_svi.values.mtu is defined or profile.values.mtu is defined %}
    mtu: {{ per_svi.values.mtu if per_svi.values.mtu is defined else profile.values.mtu }}
{%                 endif %}
{#                 Apply IP helper configuration from SVI interface #}
{%                 if tenants[tenant].vrfs[vrf].svis[svi].ip_helpers is defined and tenants[tenant].vrfs[vrf].svis[svi].ip_helpers is not none %}
    ip_helpers:
{%                     for helper_ip in tenants[tenant].vrfs[vrf].svis[svi].ip_helpers %}
      {{ helper_ip }}:
        source_interface: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_helpers[helper_ip].source_interface }}
{%                          if tenants[tenant].vrfs[vrf].svis[svi].ip_helpers[helper_ip].source_vrf is defined and tenants[tenant].vrfs[vrf].svis[svi].ip_helpers[helper_ip].source_vrf is not none %}
        vrf: {{ tenants[tenant].vrfs[vrf].svis[svi].ip_helpers[helper_ip].source_vrf }}
{%                          else %}
        vrf: {{ vrf }}
{%                          endif %}
{%                     endfor %}
{#                 Apply IP helper configuration from VRF configuration #}
{%                 elif tenants[tenant].vrfs[vrf].ip_helpers is defined and tenants[tenant].vrfs[vrf].ip_helpers is not none %}
    ip_helpers:
{%                     for helper_ip in tenants[tenant].vrfs[vrf].ip_helpers %}
      {{ helper_ip }}:
        source_interface: {{ tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_interface }}
{%                          if tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf is defined and tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf is not none %}
        vrf: {{ tenants[tenant].vrfs[vrf].ip_helpers[helper_ip].source_vrf }}
{%                          else %}
        vrf: {{ vrf }}
{%                          endif %}
{%                     endfor %}
{#                 Apply IP helper configuration from SVI profile #}
{%                 elif profile.values.ip_helpers is defined and profile.values.ip_helpers is not none %}
    ip_helpers:
{%                     for helper_ip in profile.values.ip_helpers %}
      {{ helper_ip }}:
        source_interface: {{ profile.values.ip_helpers[helper_ip].source_interface }}
{%                          if profile.values.ip_helpers[helper_ip].source_vrf is defined and profile.values.ip_helpers[helper_ip].source_vrf is not none %}
        vrf: {{ profile.values.ip_helpers[helper_ip].source_vrf }}
{%                          else %}
        vrf: {{ vrf }}
{%                          endif %}
{%                     endfor %}
{%                 endif %}
{# VLAN interface for iBGP peering in overlay VRFs #}
{%                 if loop.last and type == "l3leaf" and leaf.mlag == true %}
  Vlan{{ mlag_ibgp_peering_vrfs.base_vlan + (tenants[tenant].vrfs[vrf].vrf_vni - 1) }}:
    tenant: {{ tenant }}
    type: underlay_peering
    description: "MLAG_PEER_L3_iBGP: vrf {{ vrf }}"
    vrf: {{ vrf }}
    ip_address: {{ mlag_ips.leaf_peer_l3 | ipaddr('network') | ipmath(leaf.mlag_ip ) }}/31
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%    endif %}
{% endfor %}
